{
  "name": "ProAgendify",
  "version": "1.0.0",
  "models": [
    {
      "name": "User",
      "fields": {
        "id": "string",
        "name": "string",
        "email": "string",
        "password": "string",
        "role": "enum:superadmin|professional|client",
        "tenantId": "string"
      }
    },
    {
      "name": "Client",
      "fields": {
        "id": "string",
        "name": "string",
        "email": "string",
        "phone": "string",
        "notes": "text",
        "tenantId": "string"
      }
    },
    {
      "name": "Service",
      "fields": {
        "id": "string",
        "name": "string",
        "price": "number",
        "duration": "number",
        "description": "text",
        "tenantId": "string"
      }
    },
    {
      "name": "Appointment",
      "fields": {
        "id": "string",
        "clientId": "foreign:Client",
        "serviceId": "foreign:Service",
        "date": "datetime",
        "status": "enum:scheduled|completed|canceled",
        "notes": "text",
        "tenantId": "string"
      }
    }
  ],
  "backend": {
    "routes": [
      {
        "basePath": "/users",
        "endpoints": [
          {
            "path": "/users",
            "method": "GET",
            "description": "Listar todos os users",
            "controller": "getUsers",
            "middleware": [
              "auth",
              "tenant"
            ]
          },
          {
            "path": "/users/:id",
            "method": "GET",
            "description": "Obter user por ID",
            "controller": "getUser",
            "middleware": [
              "auth",
              "tenant"
            ]
          },
          {
            "path": "/users",
            "method": "POST",
            "description": "Criar user",
            "controller": "createUser",
            "middleware": [
              "auth",
              "tenant"
            ]
          },
          {
            "path": "/users/:id",
            "method": "PUT",
            "description": "Atualizar user",
            "controller": "updateUser",
            "middleware": [
              "auth",
              "tenant"
            ]
          },
          {
            "path": "/users/:id",
            "method": "DELETE",
            "description": "Excluir user",
            "controller": "deleteUser",
            "middleware": [
              "auth",
              "tenant"
            ]
          }
        ]
      },
      {
        "basePath": "/clients",
        "endpoints": [
          {
            "path": "/clients",
            "method": "GET",
            "description": "Listar todos os clients",
            "controller": "getClients",
            "middleware": [
              "auth",
              "tenant"
            ]
          },
          {
            "path": "/clients/:id",
            "method": "GET",
            "description": "Obter client por ID",
            "controller": "getClient",
            "middleware": [
              "auth",
              "tenant"
            ]
          },
          {
            "path": "/clients",
            "method": "POST",
            "description": "Criar client",
            "controller": "createClient",
            "middleware": [
              "auth",
              "tenant"
            ]
          },
          {
            "path": "/clients/:id",
            "method": "PUT",
            "description": "Atualizar client",
            "controller": "updateClient",
            "middleware": [
              "auth",
              "tenant"
            ]
          },
          {
            "path": "/clients/:id",
            "method": "DELETE",
            "description": "Excluir client",
            "controller": "deleteClient",
            "middleware": [
              "auth",
              "tenant"
            ]
          }
        ]
      },
      {
        "basePath": "/services",
        "endpoints": [
          {
            "path": "/services",
            "method": "GET",
            "description": "Listar todos os services",
            "controller": "getServices",
            "middleware": [
              "auth",
              "tenant"
            ]
          },
          {
            "path": "/services/:id",
            "method": "GET",
            "description": "Obter service por ID",
            "controller": "getService",
            "middleware": [
              "auth",
              "tenant"
            ]
          },
          {
            "path": "/services",
            "method": "POST",
            "description": "Criar service",
            "controller": "createService",
            "middleware": [
              "auth",
              "tenant"
            ]
          },
          {
            "path": "/services/:id",
            "method": "PUT",
            "description": "Atualizar service",
            "controller": "updateService",
            "middleware": [
              "auth",
              "tenant"
            ]
          },
          {
            "path": "/services/:id",
            "method": "DELETE",
            "description": "Excluir service",
            "controller": "deleteService",
            "middleware": [
              "auth",
              "tenant"
            ]
          }
        ]
      },
      {
        "basePath": "/appointments",
        "endpoints": [
          {
            "path": "/appointments",
            "method": "GET",
            "description": "Listar todos os appointments",
            "controller": "getAppointments",
            "middleware": [
              "auth",
              "tenant"
            ]
          },
          {
            "path": "/appointments/:id",
            "method": "GET",
            "description": "Obter appointment por ID",
            "controller": "getAppointment",
            "middleware": [
              "auth",
              "tenant"
            ]
          },
          {
            "path": "/appointments",
            "method": "POST",
            "description": "Criar appointment",
            "controller": "createAppointment",
            "middleware": [
              "auth",
              "tenant"
            ]
          },
          {
            "path": "/appointments/:id",
            "method": "PUT",
            "description": "Atualizar appointment",
            "controller": "updateAppointment",
            "middleware": [
              "auth",
              "tenant"
            ]
          },
          {
            "path": "/appointments/:id",
            "method": "DELETE",
            "description": "Excluir appointment",
            "controller": "deleteAppointment",
            "middleware": [
              "auth",
              "tenant"
            ]
          }
        ]
      }
    ],
    "controllers": [
      {
        "name": "UserController",
        "methods": [
          "getUsers",
          "getUser",
          "createUser",
          "updateUser",
          "deleteUser"
        ]
      },
      {
        "name": "ClientController",
        "methods": [
          "getClients",
          "getClient",
          "createClient",
          "updateClient",
          "deleteClient"
        ]
      },
      {
        "name": "ServiceController",
        "methods": [
          "getServices",
          "getService",
          "createService",
          "updateService",
          "deleteService"
        ]
      },
      {
        "name": "AppointmentController",
        "methods": [
          "getAppointments",
          "getAppointment",
          "createAppointment",
          "updateAppointment",
          "deleteAppointment"
        ]
      }
    ],
    "middleware": [
      {
        "name": "auth",
        "description": "Autentica o usuário via JWT"
      },
      {
        "name": "tenant",
        "description": "Verifica e valida o tenantId para operações multi-tenant"
      }
    ]
  },
  "frontend": {
    "components": [
      "UserList",
      "UserForm",
      "UserDetail",
      "UserCard",
      "ClientList",
      "ClientForm",
      "ClientDetail",
      "ClientCard",
      "ServiceList",
      "ServiceForm",
      "ServiceDetail",
      "ServiceCard",
      "AppointmentList",
      "AppointmentForm",
      "AppointmentDetail",
      "AppointmentCard"
    ],
    "pages": [
      "/login",
      "/register",
      "/dashboard",
      "/dashboard/users",
      "/dashboard/users/new",
      "/dashboard/users/:id",
      "/dashboard/users/:id/edit",
      "/dashboard/clients",
      "/dashboard/clients/new",
      "/dashboard/clients/:id",
      "/dashboard/clients/:id/edit",
      "/dashboard/services",
      "/dashboard/services/new",
      "/dashboard/services/:id",
      "/dashboard/services/:id/edit",
      "/dashboard/appointments",
      "/dashboard/appointments/new",
      "/dashboard/appointments/:id",
      "/dashboard/appointments/:id/edit"
    ],
    "layouts": [
      "AuthLayout",
      "DashboardLayout",
      "ClientLayout"
    ]
  },
  "deployment": {
    "frontend": {
      "platform": "Vercel",
      "url": "https://proagendify.vercel.app"
    },
    "backend": {
      "platform": "Render",
      "url": "https://proagendify-api.onrender.com"
    },
    "database": {
      "platform": "Neon",
      "type": "PostgreSQL"
    }
  }
}