upstream frontend {
  server frontend:3000;
}

upstream backend {
  server backend:3333;
}

# Redirecionamento HTTP para HTTPS
server {
  listen 80;
  
  # Configuração para o frontend
  server_name ${FRONTEND_DOMAIN} www.${FRONTEND_DOMAIN};
  
  location / {
    return 301 https://$host$request_uri;
  }
}

# Redirecionamento HTTP para HTTPS para a API
server {
  listen 80;
  
  # Configuração para a API
  server_name ${API_DOMAIN};
  
  location / {
    return 301 https://$host$request_uri;
  }
}

# Frontend HTTPS
server {
  listen 443 ssl;
  server_name ${FRONTEND_DOMAIN} www.${FRONTEND_DOMAIN};

  ssl_certificate /etc/nginx/ssl/cert.pem;
  ssl_certificate_key /etc/nginx/ssl/key.pem;
  
  # Configurações SSL recomendadas
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_prefer_server_ciphers on;
  ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
  ssl_session_cache shared:SSL:10m;
  ssl_session_timeout 1d;
  ssl_session_tickets off;

  # HSTS (ngx_http_headers_module é necessário) (63072000 segundos = 2 anos)
  add_header Strict-Transport-Security "max-age=63072000; includeSubdomains" always;

  location / {
    proxy_pass http://frontend;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }
}

# API HTTPS
server {
  listen 443 ssl;
  server_name ${API_DOMAIN};

  ssl_certificate /etc/nginx/ssl/cert.pem;
  ssl_certificate_key /etc/nginx/ssl/key.pem;
  
  # Configurações SSL recomendadas
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_prefer_server_ciphers on;
  ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
  ssl_session_cache shared:SSL:10m;
  ssl_session_timeout 1d;
  ssl_session_tickets off;

  # HSTS (ngx_http_headers_module é necessário) (63072000 segundos = 2 anos)
  add_header Strict-Transport-Security "max-age=63072000; includeSubdomains" always;

  location / {
    proxy_pass http://backend;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }
}
